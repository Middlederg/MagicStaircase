<button class="w-16 h-24 md:w-24 md:h-32 lg:w-32 lg:h-44 xl:w-40 xl:h-60 
     bg-white border-2 border-green-700 rounded-lg hover:shadow-lg flex items-center justify-center 
        @(InnerCardIsSelected ? "outline-black focus:outline-black" : "outline-none focus:outline-none")" 
        @onclick="OnCardSelected">
    <span class="text-3xl sm:text-4xl md:text-5xl lg:text-7xl font-mono font-bold">
        @InnerCard.Number
    </span>
</button>

@code {
    [Parameter] public Core.Card InnerCard { get; set; }

    [CascadingParameter] Core.Card SelectedCard { get; set; }

    [Parameter]
    public EventCallback<Core.Card> CardSelected { get; set; }

    private async Task OnCardSelected()
    {
        SelectedCard = InnerCard;
        await CardSelected.InvokeAsync(InnerCard);
        StateHasChanged();
    }

    private bool InnerCardIsSelected => SelectedCard != null && SelectedCard.Equals(InnerCard);
}
